@model StationCreationViewModel

@{
    ViewData["Title"] = "Create Station";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row mb-2">
        <div class="col-12 page-header">
            <h1 class="page-title">Create Station</h1>
            <div class="breadcrumb">
                <span><a asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Home</a></span><i class="bi bi-chevron-right"></i><span><a asp-area="Admin" asp-controller="Station" asp-action="Index">Manage Stations</a></span><i class="bi bi-chevron-right"></i><span>Create Station</span>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm p-3">
                <div class="card-body">
                    <form asp-area="Admin" asp-controller="Station" asp-action="Create" method="POST">
                        <div class="mb-3">
                            <label asp-for="StationName" class="form-label">Station Name</label>
                            <input asp-for="StationName" class="form-control" placeholder="Enter station name" required>
                            <span asp-validation-for="StationName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Address" class="form-label">Address</label>
                            <textarea asp-for="Address" class="form-control" rows="2" placeholder="Enter address" required></textarea>
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Latitude" class="form-label">Latitude</label>
                                <input asp-for="Latitude" class="form-control" placeholder="Enter latitude (Ex: 23.8697)" required>
                                <span asp-validation-for="Latitude" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Longitude" class="form-label">Longitude</label>
                                <input asp-for="Longitude" class="form-control" placeholder="Enter longitude (Ex: 90.3676)" required>
                                <span asp-validation-for="Longitude" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Status" class="form-label">Status</label>
                                <select asp-for="Status" class="form-select" required>
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>

                            @if (Model.Stations.Any())
                            {
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Insert At</label>
                                    <select class="form-select" id="insertAt" asp-for="InsertAfterStationId" required>
                                        <option value="0">Beginning</option>
                                        @foreach (var station in Model.Stations)
                                        {
                                            <option value="@station.StationId" selected="@(Model.Stations.Last().StationId == station.StationId ? "selected" : null)">
                                                After @station.StationName
                                            </option>
                                        }
                                    </select>
                                </div>
                            }
                        </div>

                        @if (Model.Stations.Any())
                        {
                            <div class="row" id="distanceInputs">
                                <div class='col-md-6 mb-3'>
                                    <label asp-for="Distances[0]" class='form-label'>Distance to @(Model.Stations.Last().StationName)</label>
                                    <input type='number' class='form-control' placeholder="Enter distance in KM" required>
                                </div>
                            </div>
                        }

                        <div class="d-flex justify-content-end gap-2">
                            <a asp-area="Admin" asp-controller="Station" asp-action="Index" class="btn btn-secondary">
                                <i class="bi bi-x-circle me-1"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-save me-1"></i> Save Station
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("insertAt").addEventListener("change", function () {
            let selectedValue = this.value;
            let distanceInputs = document.getElementById("distanceInputs");

            if (selectedValue == "0") { // Beginning: Show distance to the first station
                distanceInputs.innerHTML = `
                    <div class='col-md-6 mb-3'>
                        <label class='form-label'>Distance from @Model.Stations.First().StationName</label>
                        <input type='number' min="0" step="0.01" class='form-control' name='Distances[@Model.Stations.First().StationId]' required>
                    </div>`;
            } else if (selectedValue == "@Model.Stations.Last().StationId") { // End: Show distance to the last station
                distanceInputs.innerHTML = `
                    <div class='col-md-6 mb-3'>
                        <label class='form-label'>Distance from @Model.Stations.Last().StationName</label>
                        <input type='number' min="0" step="0.01" class='form-control' name='Distances[@Model.Stations.Last().StationId]' required>
                    </div>`;
            } else { // Middle: Show distances to the previous and next stations
                let selectedStation = @Html.Raw(Json.Serialize(Model.Stations));
                let selectedStationId = parseInt(selectedValue);
                let previousStation = selectedStation.find(s => s.stationId === selectedStationId);
                let nextStation = selectedStation.find(s => s.order === (previousStation.order + 1));

                distanceInputs.innerHTML = `
                    <div class='col-md-6 mb-3'>
                        <label class='form-label'>Distance from ${previousStation.stationName}</label>
                        <input type='number' step="0.01" class='form-control' name='Distances[${previousStation.stationId}]' required>
                    </div>
                    <div class='col-md-6 mb-3'>
                        <label class='form-label'>Distance from ${nextStation.stationName}</label>
                        <input type='number' step="0.01" class='form-control' name='Distances[${nextStation.stationId}]' required>
                    </div>`;
            }
        });
    </script>
}
